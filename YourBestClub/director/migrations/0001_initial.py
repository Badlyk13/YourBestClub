# Generated by Django 4.1.3 on 2022-12-05 09:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('services', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Описание')),
                ('avatar', models.ImageField(default='/no-image.png', upload_to='clubs_logo/', verbose_name='Логотип')),
                ('registered_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Клуб',
                'verbose_name_plural': 'Клубы',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='ClubGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Описание')),
                ('lesson_price', models.IntegerField(verbose_name='Стоимость занятия')),
                ('notification', models.IntegerField(default=180, verbose_name='Оповещение')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='director.club', verbose_name='Клуб')),
            ],
            options={
                'verbose_name': 'Группа(у)',
                'verbose_name_plural': 'Группы',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt', models.DateTimeField(verbose_name='Дата/время')),
                ('is_group', models.BooleanField(default=True, verbose_name='Групповое')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='director.clubgroup', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Занятие',
                'verbose_name_plural': 'Занятия',
                'ordering': ['dt'],
            },
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=64, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=64, verbose_name='Имя')),
                ('soname', models.CharField(max_length=64, verbose_name='Отчество')),
                ('phone', models.CharField(max_length=16, unique=True, verbose_name='Телефон')),
                ('avatar', models.ImageField(default='/no-image.png', upload_to='avatars_trainer/', verbose_name='Аватар')),
                ('wage', models.IntegerField(blank=True, null=True, verbose_name='Оклад')),
                ('cost', models.IntegerField(blank=True, null=True, verbose_name='Ставка за групповое занятие')),
                ('cost_individual', models.IntegerField(blank=True, null=True, verbose_name='Ставка за индивидуальное занятие')),
                ('cost_for_student', models.IntegerField(blank=True, null=True, verbose_name='Стоимость индив. для студента')),
                ('tgID', models.IntegerField(blank=True, null=True, unique=True, verbose_name='Телеграм')),
                ('registered_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('club', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='director.club', verbose_name='Клуб')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Тренер(а)',
                'verbose_name_plural': 'Тренера',
                'ordering': ['surname'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=64, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=64, verbose_name='Имя')),
                ('soname', models.CharField(blank=True, max_length=64, verbose_name='Отчество')),
                ('avatar', models.ImageField(default='/no-image.png', upload_to='avatars_student/', verbose_name='Аватар')),
                ('birthday', models.DateField(verbose_name='Дата рождения')),
                ('agent_name', models.CharField(max_length=128, verbose_name='Имя представителя')),
                ('agent_phone', models.CharField(max_length=16, verbose_name='Телефон представителя')),
                ('tgID', models.IntegerField(blank=True, null=True, unique=True, verbose_name='Телеграм')),
                ('registered_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='director.clubgroup', verbose_name='Группа')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Ученик(а)',
                'verbose_name_plural': 'Ученики',
                'ordering': ['surname'],
                'unique_together': {('surname', 'name', 'soname', 'agent_phone')},
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True, verbose_name='Статус')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='director.lesson', verbose_name='Группа')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='director.student', verbose_name='Ученик')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
                'ordering': ['lesson'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='trainer',
            field=models.ManyToManyField(blank=True, to='director.trainer', verbose_name='Тренер(а)'),
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(blank=True, max_length=64, verbose_name='Фамилия')),
                ('name', models.CharField(blank=True, max_length=64, verbose_name='Имя')),
                ('soname', models.CharField(blank=True, max_length=64, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, max_length=16, unique=True, verbose_name='Номер телефона')),
                ('avatar', models.ImageField(default='/no-image.png', upload_to='avatars_director/', verbose_name='Аватар')),
                ('tgID', models.IntegerField(blank=True, null=True, unique=True, verbose_name='Телеграм')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('registered_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Директор(а)',
                'verbose_name_plural': 'Директора',
                'ordering': ['surname'],
            },
        ),
        migrations.CreateModel(
            name='ClubSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название')),
                ('qty_lesson', models.IntegerField(verbose_name='Количество занятий')),
                ('cost', models.IntegerField(verbose_name='Стоимость')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='director.club', verbose_name='Клуб')),
            ],
            options={
                'verbose_name': 'Абонемент',
                'verbose_name_plural': 'Абонементы',
                'ordering': ['id'],
                'unique_together': {('qty_lesson', 'cost')},
            },
        ),
        migrations.AddField(
            model_name='clubgroup',
            name='subscription',
            field=models.ManyToManyField(blank=True, to='director.clubsubscription', verbose_name='Абонементы'),
        ),
        migrations.AddField(
            model_name='club',
            name='director',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='director.director', verbose_name='Директор'),
        ),
        migrations.AddField(
            model_name='club',
            name='services',
            field=models.ManyToManyField(blank=True, to='services.service', verbose_name='Услуги'),
        ),
        migrations.AlterUniqueTogether(
            name='clubgroup',
            unique_together={('title', 'club')},
        ),
        migrations.AlterUniqueTogether(
            name='club',
            unique_together={('title', 'city')},
        ),
    ]
